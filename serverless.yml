org: tsmarsh
app: boobees
service: boobees

frameworkVersion: '3'

provider:
  name: aws
  runtime: java17
  region: us-east-1
  stage: dev
  tracing:
    apiGateway: true
    lambda: true
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "xray:PutTraceSegments"
            - "xray:PutTelemetryRecords"
          Resource: "*"
        - Effect: Allow
          Action:
            - sqs:SendMessage
            - sqs:ReceiveMessage
            - sqs:DeleteMessage
            - sqs:GetQueueAttributes
          Resource:
            - Fn::GetAtt:
                - UserChatQueue
                - Arn
            - Fn::GetAtt:
                - AnswerQueue
                - Arn
        - Effect: Allow
          Action:
            - dynamodb:PutItem
            - dynamodb:GetItem
            - dynamodb:Query
            - dynamodb:BatchWriteItem
          Resource:
            - Fn::GetAtt:
                - ChatHistoryTable
                - Arn
            - Fn::Sub:
                - "${ChatHistoryTableArn}/*"
                - ChatHistoryTableArn:
                    Fn::GetAtt:
                      - ChatHistoryTable
                      - Arn


package:
  artifact: target/boobees-dev.jar


functions:
  webhook:
    handler: com.tailoredshapes.boobees.WebhookHandler
    events:
      - http:
          path: webhook
          method: post
          cors: true
    environment:
      QUEUE_URL:
        Ref: UserChatQueue

  sqshandler:
    handler: com.tailoredshapes.boobees.SQSChatHandler
    timeout: 45
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - UserChatQueue
              - Arn
          batchSize: 10
    environment:
      OPENAI_API_KEY: ${self:custom.secrets.OPENAI_API_KEY}
      TELEGRAM_BOT_TOKEN: ${self:custom.secrets.TELEGRAM_BOT_TOKEN}
      SYSTEM_PROMPT: ${self:custom.env.SYSTEM_PROMPT}
      TABLE_NAME: ${self:resources.Resources.ChatHistoryTable.Properties.TableName}
      QUEUE_URL:
        Ref: AnswerQueue

  answer:
    handler: com.tailoredshapes.boobees.SQSTextHandler
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - AnswerQueue
              - Arn
          batchSize: 10
    environment:
      TELEGRAM_BOT_TOKEN: ${self:custom.secrets.TELEGRAM_BOT_TOKEN}

resources:
  Resources:
    UserChatQueue:
      Properties:
        QueueName: boobees-chat-queue-${opt:stage, self:provider.stage}.fifo
        FifoQueue: true
        ContentBasedDeduplication: true
        VisibilityTimeout: 55
      Type: "AWS::SQS::Queue"
    AnswerQueue:
      Properties:
        QueueName: boobees-answer-queue-${opt:stage, self:provider.stage}.fifo
        FifoQueue: true
        ContentBasedDeduplication: true
        VisibilityTimeout: 55
      Type: "AWS::SQS::Queue"
    ChatHistoryTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: boobees-chat-history-${opt:stage, self:provider.stage}
        AttributeDefinitions:
          - AttributeName: messageId
            AttributeType: S
          - AttributeName: timestamp
            AttributeType: N
          - AttributeName: chatId
            AttributeType: N
        KeySchema:
          - AttributeName: messageId
            KeyType: HASH
          - AttributeName: timestamp
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        GlobalSecondaryIndexes:
          - IndexName: ConversationIndex
            KeySchema:
              - AttributeName: chatId
                KeyType: HASH
              - AttributeName: timestamp
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1

custom:
  secrets: ${file(secrets.${opt:stage, self:provider.stage}.yml)}
  env: ${file(config.${opt:stage, self:provider.stage}.yml)}

plugins:
  - serverless-offline
  - serverless-secrets-plugin
